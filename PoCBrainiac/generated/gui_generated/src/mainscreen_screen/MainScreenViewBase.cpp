/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 380, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backGround.setXY(0, 0);
    backGround.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_BACKGROUND_ID));
    add(backGround);

    crcProg_Tacometer.setXY(30, 41);
    crcProg_Tacometer.setProgressIndicatorPosition(0, 0, 150, 150);
    crcProg_Tacometer.setRange(0, 100);
    crcProg_Tacometer.setCenter(75, 75);
    crcProg_Tacometer.setRadius(65);
    crcProg_Tacometer.setLineWidth(20);
    crcProg_Tacometer.setStartEndAngle(-120, 120);
    crcProg_Tacometer.setCapPrecision(180);
    crcProg_Tacometer.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_MEDIUM_ID));
    crcProg_TacometerPainter.setColor(touchgfx::Color::getColorFromRGB(0, 240, 255));
    crcProg_Tacometer.setPainter(crcProg_TacometerPainter);
    crcProg_Tacometer.setValue(1);
    add(crcProg_Tacometer);

    crcProg_Speedometer.setXY(200, 41);
    crcProg_Speedometer.setProgressIndicatorPosition(0, 0, 150, 150);
    crcProg_Speedometer.setRange(0, 100);
    crcProg_Speedometer.setCenter(75, 75);
    crcProg_Speedometer.setRadius(65);
    crcProg_Speedometer.setLineWidth(20);
    crcProg_Speedometer.setStartEndAngle(-120, 120);
    crcProg_Speedometer.setCapPrecision(180);
    crcProg_Speedometer.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_MEDIUM_ID));
    crcProg_SpeedometerPainter.setColor(touchgfx::Color::getColorFromRGB(0, 240, 255));
    crcProg_Speedometer.setPainter(crcProg_SpeedometerPainter);
    crcProg_Speedometer.setValue(1);
    add(crcProg_Speedometer);

    txt_PRNDL.setXY(99, 106);
    txt_PRNDL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt_PRNDL.setLinespacing(0);
    Unicode::snprintf(txt_PRNDLBuffer, TXT_PRNDL_SIZE, "%s", touchgfx::TypedText(T_PRNDL_WILDCARD).getText());
    txt_PRNDL.setWildcard(txt_PRNDLBuffer);
    txt_PRNDL.resizeToCurrentText();
    txt_PRNDL.setTypedText(touchgfx::TypedText(T_PRNDL_DEFAULT));
    add(txt_PRNDL);

    txt_Odometer.setXY(151, 191);
    txt_Odometer.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt_Odometer.setLinespacing(0);
    Unicode::snprintf(txt_OdometerBuffer, TXT_ODOMETER_SIZE, "%s", touchgfx::TypedText(T_ODOMETER_WILDCARD).getText());
    txt_Odometer.setWildcard(txt_OdometerBuffer);
    txt_Odometer.resizeToCurrentText();
    txt_Odometer.setTypedText(touchgfx::TypedText(T_ODOMETER_DEFAULT));
    add(txt_Odometer);
}

MainScreenViewBase::~MainScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainScreenViewBase::setupScreen()
{

}
