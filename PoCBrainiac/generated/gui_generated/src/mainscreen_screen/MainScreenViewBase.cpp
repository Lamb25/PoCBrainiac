/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase()
{
    __background.setPosition(0, 0, 380, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backGround.setXY(0, 0);
    backGround.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_BACKGROUND_ID));
    add(backGround);

    txt_PRNDL.setXY(184, 157);
    txt_PRNDL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt_PRNDL.setLinespacing(0);
    Unicode::snprintf(txt_PRNDLBuffer, TXT_PRNDL_SIZE, "%s", touchgfx::TypedText(T_PRNDL_WILDCARD).getText());
    txt_PRNDL.setWildcard(txt_PRNDLBuffer);
    txt_PRNDL.resizeToCurrentText();
    txt_PRNDL.setTypedText(touchgfx::TypedText(T_PRNDL_DEFAULT));
    add(txt_PRNDL);

    txt_Odometer.setXY(151, 191);
    txt_Odometer.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt_Odometer.setLinespacing(0);
    Unicode::snprintf(txt_OdometerBuffer, TXT_ODOMETER_SIZE, "%s", touchgfx::TypedText(T_ODOMETER_WILDCARD).getText());
    txt_Odometer.setWildcard(txt_OdometerBuffer);
    txt_Odometer.resizeToCurrentText();
    txt_Odometer.setTypedText(touchgfx::TypedText(T_ODOMETER_DEFAULT));
    add(txt_Odometer);

    gauge_Taco.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_ACTIVE_ID));
    gauge_Taco.setPosition(0, 0, 184, 184);
    gauge_Taco.setCenter(92, 92);
    gauge_Taco.setStartEndAngle(-90, 89);
    gauge_Taco.setRange(0, 100);
    gauge_Taco.setValue(1);
    gauge_Taco.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
    gauge_Taco.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge_Taco.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(gauge_Taco);

    gauge_Speedo.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_ACTIVE_ID));
    gauge_Speedo.setPosition(196, 0, 184, 184);
    gauge_Speedo.setCenter(92, 92);
    gauge_Speedo.setStartEndAngle(-90, 89);
    gauge_Speedo.setRange(0, 100);
    gauge_Speedo.setValue(1);
    gauge_Speedo.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
    gauge_Speedo.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge_Speedo.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(gauge_Speedo);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}
